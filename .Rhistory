for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 9
init <- 9
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 9
init <- 9
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 9
init <- 9
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 9
init <- 9
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 9
init <- 9
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 9
init <- 9
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 10
init <- 1
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 21
init <- 10
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 21
init <- 10
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}4
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 21
init <- 10
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 21
init <- 10
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
options(show.error.locations = TRUE)
options(error=function()traceback(2))
options(max.print=3000)
N <- 21
init <- 1
for (i in init:N) {
if (i < 10) {
string <- paste0("instances\\CHAO_MCTTRP_0",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
} else {
string <- paste0("instances\\CHAO_MCTTRP_",i,".txt")
result <- CW_algorithm(string, "MCTTRP", 0)
}
}
library(mcttrpcw)
result <- CW_algorithm(string, "MCTTRP", 0)
result <- CW_algorithm("instances/CHAO_TTRP_01.txt", "TTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_TTRP_01.txt", "TTRP", 5, 3, 0)
result$rutas_des
result$result_res
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result <- CW_algorithm("instances/CHAO_MCTTRP_02.txt", "MCTTRP", 5, 3, 0)
result <- CW_algorithm("instances/CHAO_TTRP_02.txt", "TTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_TTRP_02.txt", "TTRP", 5, 3, 0)
result <- CW_algorithm("instances/CHAO_TTRP_01.txt", "TTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_TTRP_01.txt", "TTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_TTRP_01.txt", "TTRP", 5, 3, 0)
result$result_res
library(mcttrpcw)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_TTRP_01.txt", "TTRP", 5, 3, 0)
result$result_res
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
resultado <- result$result_res
resultado
resultado[3]
resultado[[3]]
return_main_route<-function(route) {
main_route <- c(0)
state <- 0
for (i in 2:(length(route)-1)) {
if (state == 0) {
main_route <- c(main_route, route[i])
}
if (sum(route==route[i])>=2) {
if (state==1) state <- 0
else state <- 1
}
}
main_route <- c(main_route, 0)
}
route <- c(0,1,2,3,4,5,6,7,4,8,9,10,11,10,0)
return_main_route(route )
return_main_route(route )
return_main_route<-function(route) {
main_route <- c(0)
state <- 0
for (i in 2:(length(route)-1)) {
if (state == 0) {
main_route <- c(main_route, route[i])
}
if (sum(route==route[i])>=2) {
if (state==1) state <- 0
else state <- 1
}
}
main_route <- c(main_route, 0)
return(main_route)
}
return_main_route(route )
rutas
ruta
route
return_main_route(route )
return_subroutes<-function(route) {
subtours <- list()
state <- 0
counter_list <- 0
for (i in 2:(length(route)-1)) {
if (sum(route==route[i])>=2) {
if (state==1) {
state <- 0
}
else {
state <- 1
counter_list <- counter_list + 1
subtours[counter_list]$tour <-  c(route[i])
subtours[counter_list]$root <- route[i]
}
}
if (state == 1) {
subtours[counter_list]$tour <- c(subtours[counter_list]$tour, route[i])
}
}
return(subtours)
}
return_subroutes(route)
library(mcttrpcw)
return_subroutes(route)
return_subroutes(route)
library(mcttrpcw)
return_subroutes(route)
return_subroutes(route)
return_subroutes<-function(route) {
subtours <- list()
state <- 0
counter_list <- 0
for (i in 2:(length(route)-1)) {
if (sum(route==route[i])>=2) {
if (state==1) {
state <- 0
}
else {
state <- 1
counter_list <- counter_list + 1
subtours[[counter_list]] <- list()
subtours[[counter_list]]$tour <-  c(route[i])
subtours[[counter_list]]$root <- route[i]
}
}
if (state == 1) {
subtours[[counter_list]]$tour <- c(subtours[[counter_list]]$tour, route[i])
}
}
return(subtours)
}
return_subroutes(route)
library(mcttrpcw)
return_subroutes<-function(route) {
subtours <- list()
state <- 0
counter_list <- 0
for (i in 2:(length(route)-1)) {
if (sum(route==route[i])>=2) {
if (state==1) {
state <- 0
}
else {
state <- 1
counter_list <- counter_list + 1
subtours[[counter_list]] <- list()
subtours[[counter_list]]$tour <-  c(route[i])
subtours[[counter_list]]$root <- route[i]
}
}
if (state == 1) {
subtours[[counter_list]]$tour <- c(subtours[[counter_list]]$tour, route[i])
}
}
return(subtours)
}
return_subroutes(route)
route
return_subroutes<-function(route) {
subtours <- list()
state <- 0
counter_list <- 0
for (i in 2:(length(route)-1)) {
if (state == 1) {
subtours[[counter_list]]$tour <- c(subtours[[counter_list]]$tour, route[i])
}
if (sum(route==route[i])>=2) {
if (state==1) {
state <- 0
}
else {
state <- 1
counter_list <- counter_list + 1
subtours[[counter_list]] <- list()
subtours[[counter_list]]$tour <-  c(route[i])
subtours[[counter_list]]$root <- route[i]
}
}
}
return(subtours)
}
route
return_subroutes(route)
library(mcttrpcw)
return_subroutes<-function(route, n1) {
subtours <- list()
state <- 0
counter_list <- 0
for (i in 2:(length(route)-1)) {
if (state == 1) {
subtours[[counter_list]]$tour <- c(subtours[[counter_list]]$tour, route[i])
}
if (sum(route==route[i])>=2) {
if (state==1) {
state <- 0
}
else {
state <- 1
counter_list <- counter_list + 1
subtours[[counter_list]] <- list()
subtours[[counter_list]]$tour <-  c(route[i])
subtours[[counter_list]]$root <- route[i]
}
}
}
for (i in 1:length(subtours)) {
f_vc <- 0
f_tc <- 0
counter_length_tour <- 0
for (j in 2:(length(subtours[[i]]$tour)-1)){
if (subtours[[i]]$tour[j] < n1) {
if (f_vc == 0) {
subtours[[i]]$vc_clients <- c(subtours[[i]]$tour[j])
f_vc <- 1
} else {
subtours[[i]]$vc_clients <- c(subtours[[i]]$vc_clients, subtours[[i]]$tour[j])
}
} else {
if (f_tc == 0) {
subtours[[i]]$tc_clients <- c(subtours[[i]]$tour[j])
f_tc <- 1
} else {
subtours[[i]]$tc_clients <- c(subtours[[i]]$tc_clients, subtours[[i]]$tour[j])
}
}
subtours[[i]]$length  <- counter_length_tour <- counter_length_tour + 1
}
counter_length_tour
}
return(subtours)
}
return_subroutes(route)
return_subroutes(route, 8)
library(mcttrpcw)
return_subroutes(route, 8)
result <- CW_algorithm("instances/CHAO_TTRP_01.txt", "TTRP", 5, 3, 0)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res
result$result_res[5]
result$result_res[6]
result$result_res[3]
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[3]
result$result_res[2]
result$result_res[2]$truck_number
result$result_res[[2]]$truck_number
result$result_res[[1]]$truck_number
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[[2]]$truck_number
result$result_res[[2]]$truck_number
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[[2]]$truck_number
result$result_res[[2]]
library(mcttrpcw)
result$result_res[[2]]
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[[2]]
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[[2]]
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[[2]]
library(mcttrpcw)
result$result_res[[2]]
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
library(mcttrpcw)
result$result_res[[2]]
result$result_res[[2]]
result$result_res[[2]]
result$result_res[[3]]
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[[2]]
library(mcttrpcw)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[[2]]
result$result_res[[3]]
library(mcttrpcw)
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[[1]]
library(mcttrpcw)
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[[1]]
result$result_res[[1]]$VCs
result$result_res[[1]]$route
result$result_res[[2]]$route
result$result_res[[2]]$VCs
result$result_res[[2]]$TCs
result$result_res[[3]]$VCs
result$result_res[[3]]$TCs
result$result_res[[3]]$route
result$result_res[[4]]$route
result$result_res[[4]]
result$result_res[[4]]$type
library(mcttrpcw)
rresult_res[[i]]
result$result_res[[4]]
library(mcttrpcw)
result$result_res[[4]]
library(mcttrpcw)
result$result_res[[4]]
result <- CW_algorithm("instances/CHAO_MCTTRP_01.txt", "MCTTRP", 5, 3, 0)
result$result_res[[4]]
